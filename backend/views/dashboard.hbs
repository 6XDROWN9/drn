<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />

    <!-- Latest compiled and minified CSS -->
    <!--
    <link rel="stylesheet" href="//maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
-->
    <!--Import Google Icon Font-->
    <link href="//fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">

    <link href="//fonts.googleapis.com/css?family=Ubuntu" rel="stylesheet">

    <!-- Font Awesome -->
    <script src="//use.fontawesome.com/811ca3dd9f.js"></script>

    <!-- jQuery library -->
    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>

    <!-- Latest compiled JavaScript -->
    <script src="//maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>

    <!-- Compiled and minified JavaScript -->
    <script src="../js/materialize.min.js"></script>

    <!-- Misc Scripts -->
    <script src="../js/scripts.js"></script>

    <!-- Fonts -->
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <!-- OpenGraph -->

    <!-- Compiled and minified CSS -->
    <link rel="stylesheet" href="../css/materialize.min.css">

    <link rel="stylesheet" href="../css/main.css">

    <title>dashboard</title>

    <link rel="icon" type="image/png" href="/img/blargbotmini.png">

    <meta name="author" content="stupid cat">

    <meta content="Manage the bot's settings from the comfort of a website." property="og:description">

    <meta content="Dashboard" property="og:title">
    <meta content="blargbot" property="og:site_name">
    <meta content='http://blargbot.xyz/img/blargbot.png' property='og:image'>
    <meta content='https://blargbot.xyz/img/blargbot.png' property='og:image:secure_url'>
    <meta content='image/png' property='og:image:type'>
    <meta content='512' property='og:image:width'>
    <meta content='512' property='og:image:height'>

</head>

<body class="blue-grey">


    {{> sidebar}}



    <a class="btn-floating btn-primary button-collapse btn-large waves-effects waves-light" data-activates="slide-out">
        <i class="large material-icons">menu</i></a>

    <header class="page-header">


        <h1 class="centre">dashboard</h1>
    </header>
    <main>

        <div class="section">
            <div class="row">
                <div class="col s12 ">
                    <div class="card blue-grey darken-2">
                        {{#if user}}

                        <div id='workspace'>
                            {{> displayGuilds}}
                        </div>

                        {{else}}
                        <span class='card-content'>You need to be logged in to use this!</span> {{/if}}
                    </div>
                </div>
            </div>
        </div>

    </main>
    <!-- Menu Toggle Script -->
    <script>
        init();

    </script>
<footer class="page-footer blue-grey darken-2">
    <div class="section">
        <div class="rows">
            <div class="col s12 m10 offset-m1 l6 offset-l3">
                <p class="centre">
                    &copy; 2016 - Ratismal (stupid cat)
                </p>
            </div>
        </div>
    </div>
</footer>

</body>
<script>
    $(document).ready(function () {
        $('.modal-trigger').leanModal();
        $('select').material_select();
    });

    var sid = '{{sessionId}}';
    var wss = new WebSocket('{{url}}');
    var workspace = document.getElementById('workspace')
    var index = workspace.innerHTML;
    var settings = JSON.parse(`{{gsettings}}`);
    let data;

    function save() {
        if (!data) return;
        let keys = Object.keys(data.data.guild.settings);
        for (let i = 0; i < keys.length; i++) {
            let element = document.getElementById(keys[i]);
            let value = settings[keys[i]];


            if (element) {
                switch (element.type) {
                    case 'checkbox':
                        data.data.guild.settings[keys[i]] = element.checked;
                        break;
                    default:
                        data.data.guild.settings[keys[i]] = element.value;
                        break;
                }
            }
        }
        sendData('saveGuild', data.data.guild);
    }

    wss.onmessage = function (event) {
        data = JSON.parse(event.data);
        console.dir(data);
        if (data.code == 200) {
            switch (data.data.type) {
                case 'guildSaved':
                    console.dir(data);
                    Materialize.toast(data.data.data, 5000);
                    break;
                case 'displayGuild':
                    let settings = data.data.guild.settings;
                    let modal = document.getElementById('settings-modal')
                    let keys = Object.keys(settings);
                    document.getElementById('modal-guild').innerText = 'Settings for ' + data.data.guild.guild.name;

                    let channelSelectors = document.getElementsByClassName("channel-selector");
                    let channels = data.data.guild.guild.channels;
                    for (let i = 0; i < channelSelectors.length; i++) {
                        let select = channelSelectors[i];
                        if (select.tagName == 'SELECT') {
                            let defaultVal = select.getAttribute('data-default');
                            if (defaultVal == 'none') {
                                let channel = document.createElement("option")
                                channel.setAttribute("value", "");
                                channel.setAttribute("selected", "");
                                channel.text = "None";
                                select.appendChild(channel);
                            }
                            for (let ii = 0; ii < channels.length; ii++) {
                                if (channels[ii].type == 0) {
                                    let channel = document.createElement("option")
                                    channel.setAttribute("value", channels[ii].id);
                                    if (channels[ii].id == data.data.guild.guildid && defaultVal == 'default') {
                                        channel.setAttribute("selected", "");
                                    }
                                    channel.text = channels[ii].name;
                                    select.appendChild(channel);
                                }
                            }
                        }
                    }

                    let roleSelectors = document.getElementsByClassName("role-selector");
                    let roles = data.data.guild.guild.roles;
                    for (let i = 0; i < roleSelectors.length; i++) {
                        let select = roleSelectors[i];
                        if (select.tagName == 'SELECT') {
                            let defaultVal = select.getAttribute('data-default');
                            if (defaultVal == 'none') {
                                let role = document.createElement("option")
                                role.setAttribute("value", "");
                                role.setAttribute("selected", "");
                                role.text = "None";
                                select.appendChild(role);
                            }
                            for (let ii = 0; ii < roles.length; ii++) {
                                let role = document.createElement("option");
                                role.setAttribute("value", roles[ii].id);
                                role.text = roles[ii].name;
                                if (roles[ii].color != '') {
                                    let roleText = document.createElement("div");
                                    roleText.className += 'colored-class';
                                    roleText.setAttribute("data-color", roles[ii].color);
                                    role.appendChild(roleText);
                                }
                                select.appendChild(role);
                            }
                        }
                    }



                    for (let i = 0; i < keys.length; i++) {
                        let element = document.getElementById(keys[i]);

                        let value = settings[keys[i]];

                        if (element) {
                            switch (element.type) {
                                case 'checkbox':
                                    value = value != '0'
                                    element.checked = value;
                                    break;
                                default:
                                    element.value = value;
                                    break;
                            }
                        }
                    }

                    Materialize.updateTextFields();
                    $('select').material_select();

                    let toColor = document.getElementsByClassName('colored-class');
                    for (let i = 0; i < toColor.length; i++) {
                        let element = toColor[i];
                        let parent = element.parentElement;
                        if (parent.tagName == 'SPAN') {
                            parent.setAttribute("style", "color: " + element.getAttribute("data-color"));

                        }
                        //   element.remove();
                    }
                    for (let i = 0; i < toColor.length; i++) {
                        toColor[i].remove();
                    }
                    let inputs = document.getElementsByTagName("INPUT");
                    for (let i = 0; i < inputs.length; i++) {
                        if (inputs[i].getAttribute("value")) {
                            let index = inputs[i].getAttribute("value").indexOf("<div class=\"colored-class\" data-color=");
                            if (index > -1) {
                                inputs[i].setAttribute("value", inputs[i].getAttribute("value").substring(0, index));
                            }
                        }
                    }

                    $('#settings-modal').openModal({
                        dismissible: false
                    });

                    break;
            }
        } else {
            Materialize.toast(data.data, 5000);
        }
    }

    function sendData(type, data) {
        wss.send(JSON.stringify({ type, sid, data }));
    }
</script>

<div id="settings-modal" class="modal modal-fixed-footer blue-grey darken-2">
    <div class="modal-content">
        <h3 id="modal-guild"></h3>
        <p>This settings dashboard is incomplete and in beta. Use at your own risk.</p>
        <form>
            <h4>Messages</h4>
            Greetings
            <div class='row'>
                <div class='col s12 m9'><label for='greeting'>Greeting Message</label>
                    <textarea placeholder='The message that will be outputted when somebody joins the guild. BBTag compatible.' id='greeting'
                        class='materialize-textarea'></textarea>
                </div>
                <div class='col s12 m3'>
                    <div class='input-field'>
                        <select id='greetingchan' class='channel-selector' data-default='default'>
                                            </select> <label>Greeting Channel</label>
                    </div>
                </div>
            </div>
            Farewells
            <div class='row'>
                <div class='col s12 m9'><label for='farewell'>Farewell Message</label>
                    <textarea placeholder='The message that will be outputted when somebody leaves the guild. BBTag compatible.' id='farewell'
                        class='materialize-textarea'></textarea>
                </div>
                <div class='col s12 m3'>
                    <div class='input-field'>
                        <select id='farewellchan' class='channel-selector' data-default='default'>
                                            </select> <label>Farewell Channel</label>
                    </div>
                </div>
            </div>
            <h4>Administrative</h4>

            <div class='row'>
                <div class='col s12'>
                    <p class="range-field">
                        Anti-Mention Spam
                        <label for='antimention'>The number of unique mentions allowed in a message before banning. 0 to disable.</label>
                        <input type="range" id="antimention" min="0" max="50" />
                    </p>
                </div>
            </div>
            <div class='row'>
                <div class='col s12 m4 centre'>
                    Make Chatlogs
                    <div class="switch">
                        <label>
      Off
      <input type="checkbox" id='makelogs'>
      <span class="lever"></span>
      On
    </label></div>
                </div>
                <div class='col s12 m4'>
                    <div class='input-field'>
                        <select id='modlog' class='channel-selector' data-default='none'>
                                            </select> <label>Modlog Channel</label>
                    </div>
                </div>
                <div class='col s12 m4'>
                    <div class='input-field'>
                        <select id='mutedrole' class='role-selector' data-default='none'>
                                            </select> <label>Muted Role</label>
                    </div>
                </div>
            </div>
            <h4>Permissions</h4>
            <div class='row'>
                <div class='col s12 m4 centre'>
                    Permission Override
                    <div class="switch">
                        <label>
      Off
      <input type="checkbox" id='permoverride'>
      <span class="lever"></span>
      On
    </label></div>
                </div>
                <div class='col s12 m4 input-field'>
                    <input id="staffperms" type="number" class="validate">
                    <label for="staffperms">Staff Permissions</label>
                </div>
            </div>
            <div class='row'>
                <div class='col s12 m4 centre'>
                    <a class='waves-effect waves-light btn' href="https://discordapi.com/permissions.html" target="_blank">Calculator</a>
                </div>
                <div class='col s12 m4 offset input-field'>
                    <input id="kickoverride" type="number" class="validate">
                    <label for="kickoverride">Kick Override</label>
                </div>
                <div class='col s12 m4 input-field'>
                    <input id="banoverride" type="number" class="validate">
                    <label for="banoverride">Ban Override</label>
                </div>
            </div>
            <h4>Misc</h4>
            <div class='row'>
                <div class='col s12 m4 centre'>
                    Tableflips
                    <div class="switch">
                        <label>
      Off
      <input type="checkbox" id='tableflip'>
      <span class="lever"></span>
      On
    </label></div>
                </div>
                <div class='col s12 m4 centre'>
                    CAH NSFW
                    <div class="switch">
                        <label>
      Off
      <input type="checkbox" id='cahnsfw'>
      <span class="lever"></span>
      On
    </label></div>
                </div>
                <div class='col s12 m4 centre'>
                    DM Help
                    <div class="switch">
                        <label>
      Off
      <input type="checkbox" id='dmhelp'>
      <span class="lever"></span>
      On
    </label></div>
                </div>
            </div>
            <div class='row'>
                <div class='col s12'><label for='greeting'>Custom Prefix</label>
                    <textarea placeholder='The custom prefix for your guild. Does not replace the original prefix.' id='prefix' class='materialize-textarea'></textarea>
                </div>
            </div>
        </form>
    </div>
    <div class="modal-footer blue-grey darken-4 ">
        <a href="#!" class=" modal-action modal-close waves-effect waves-green btn-flat white-text ">Close</a>
        <a href="#!" class=" modal-action modal-close waves-effect waves-green btn-flat white-text " onclick="save()">Save</a>
</div>
</div>

</html>