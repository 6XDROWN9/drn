<html lang="en">

<head>
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1" />

    <!-- Latest compiled and minified CSS -->
    <!--
    <link rel="stylesheet" href="//maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
-->
    <!--Import Google Icon Font-->
    <link href="//fonts.googleapis.com/icon?family=Material+Icons" rel="stylesheet">

    <link href="//fonts.googleapis.com/css?family=Ubuntu" rel="stylesheet">

    <!-- Compiled and minified CSS -->
    <link rel="stylesheet" href="//cdnjs.cloudflare.com/ajax/libs/materialize/0.100.2/css/materialize.min.css">

    <link rel="stylesheet" href="/css/main.css">

    <!-- Font Awesome -->
    <script src="//use.fontawesome.com/811ca3dd9f.js"></script>

    <!-- jQuery library -->
    <script src="//ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js"></script>

    <!-- Compiled and minified JavaScript -->
    <script src="//cdnjs.cloudflare.com/ajax/libs/materialize/0.100.2/js/materialize.min.js"></script>

    <!-- Misc Scripts -->
    <script src="/js/scripts.js"></script>

    <!-- Fonts -->
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />

    <!-- CodeMirror -->
    <script src="/codemirror/lib/codemirror.js"></script>
    <link rel="stylesheet" href="/codemirror/lib/codemirror.css">
    <link rel="stylesheet" href="/codemirror/theme/monokai.css">
    <script src="/codemirror/mode/javascript/javascript.js"></script>
    <script src="/codemirror/addon/mode/simple.js"></script>
    <script src="/codemirror/addon/edit/matchbrackets.js"></script>
    <script src="/codemirror/addon/edit/closebrackets.js"></script>
    <script src="/codemirror/addon/edit/matchtags.js"></script>
    <script src="/codemirror/addon/hint/show-hint.js"></script>
    <script src="/js/cattag-hint.js"></script>
    <link rel="stylesheet" href="/codemirror/addon/hint/show-hint.css">

    <!-- OpenGraph -->
    <title>Tag IDE</title>

    <link rel="icon" type="image/png" href="/img/blargbotmini.png">

    <meta name="author" content="stupid cat">

    <meta content="Online IDE for tag creation." property="og:description">

    <meta content="Tag Editor" property="og:title">
    <meta content="blargbot" property="og:site_name">
    <meta content='http://blargbot.xyz/img/blargbot.png' property='og:image'>
    <meta content='https://blargbot.xyz/img/blargbot.png' property='og:image:secure_url'>
    <meta content='image/png' property='og:image:type'>
    <meta content='512' property='og:image:width'>
    <meta content='512' property='og:image:height'>

</head>

<body class="blue-grey">
    {{> sidebar}}
    <a class="btn-floating btn-primary button-collapse btn-large waves-effects waves-light" data-activates="slide-out">
        <i class="large material-icons">menu</i></a>

    <header class="page-header">
        <h1 class="centre">BBTag IDE (beta)</h1>
    </header>
    <main>

        <div class="section">

            <div class="row">
                <div class="col s12 m10 offset-m1">
                    <div class="card blue-grey darken-2">
                        <div class="card-content">
                            <script>
                                function completeAfter(cm, pred) {
                                    var cur = cm.getCursor();
                                    if (!pred || pred()) setTimeout(function () {
                                        if (!cm.state.completionActive)
                                            cm.showHint({
                                                completeSingle: false
                                            });
                                    }, 100);
                                    return CodeMirror.Pass;
                                }
                                var brace = 'builtin';
                                var semiColon = 'bracket';
                                CodeMirror.defineSimpleMode("cattag", {
                                    start: [
                                        { regex: /\d/, token: 'number' },
                                        { regex: /\{\/\//, token: 'comment', push: 'comment' },
                                        { regex: /\{/, token: brace, push: 'innerTag', indent: true },
                                        { regex: /[;}]/, token: brace },
                                        { regex: /[^\{};]*/, token: 'bracket' }
                                    ],
                                    comment: [
                                        { regex: /\}/, token: 'comment', pop: true },
                                        { regex: /\{/, token: 'comment', push: 'comment' },
                                        { regex: /[^\{}]*/, token: 'comment' }
                                    ],
                                    innerTag: [
                                        { regex: /\{\/\//, token: 'comment', push: 'comment' },                                    
                                        { regex: /\{/, token: brace, push: 'innerTag', indent: true },
                                        { regex: /\}/, token: brace, pop: true, dedent: true },
                                        { regex: /([^{}; ]+)/, token: 'keyword' },
                                        { regex: /(;+)(\{\/\/)/, token: [semiColon, 'comment'], push: 'comment'},
                                        { regex: /(;+)(\{)/, token: [semiColon, brace], push: 'innerTag', indent: true },
                                        { regex: /(;+)(})/, token: [semiColon, brace], pop: true, dedent: true },
                                        { regex: /(;+)$/, token: [semiColon] },
                                        { regex: /(;+)(\d*)?([^{};]*)?/, token: [semiColon, 'number', 'string'] },
                                        { regex: /^(\d*)?([^{};]*)?/, token: ['number', 'string'] }
                                    ],
                                    args: [
                                        { regex: /\{\/\//, token: 'comment', push: 'comment' },                                                                        
                                        { regex: /\{/, token: brace, push: 'innerTag', indent: true },
                                        { regex: /\}/, token: brace, pop: true, dedent: true },
                                        { regex: /;/, token: semiColon },
                                        { regex: /[^{};]+/, token: 'string' }
                                    ],
                                    meta: {}
                                });
                              
                            </script>
                            <style>
                                .CodeMirror {
                                    height: 100%;
                                }
                            </style>
                            {{#if message}}
                            <p>{{message}}</p>
                            {{/if}} {{#if error}}
                            <p class='red-text accent-3'>{{error}}</p>
                            {{/if}}
                            <form style="margin: 0" method="post">
                                <div class='row' style='margin-bottom: 0'>

                                    <div class="input-field col s3">
                                        <input id='tagname' type="text" name="tagName" {{#if tagName}}value='{{tagName}}' {{/if}}>
                                        <label for='tagname'>Tag Name</label>
                                    </div>
                                    <div class='input-field col s3'>
                                        <input id='newname' type="text" name="newname" {{#if user}}{{else}}disabled{{/if}}>
                                        <label for='newname'>New Name</label>
                                    </div>
                                    <div class='col s3'>
                                        <button type="submit" name="action" value='load' class="cyan accent-3 white-text btn waves-effect waves-light full">
										Load
										</button>
                                    </div>
                                    <div class='col s3'>
                                        <button type="submit" name="action" value='save' class="cyan accent-3 white-text btn waves-effect waves-light full {{#if user}}{{else}}disabled{{/if}}"
                                            {{#if user}}{{else}}disabled{{/if}}>
										 Save
										 </button>
                                    </div>
                                </div>
                                <div class='row' style='margin-top: 0px'>
                                    <div class="input-field col s3">
                                        <select id="destSelect" name="destination">
                                            {{#if destination}}
                                            <option value="">Tag</option>                                            
                                            {{else}}
                                            <option value="" selected>Tag</option>
                                            {{/if}}
                                            {{#each guilds}}
                                            <option value="{{id}}" {{#ifCond id '==' ../destination}}selected{{/ifCond}}>{{name}}</option>
                                            {{/each}}
                                        </select>
                                        <label for="destSelect">Destination</label>
                                    </div>
                                    <div class='input-field col s3'>
                                        <input id='fontsize' type="number" name="fontsize" value=20 onchange="setFontSize(event.target.value)">
                                        <label for='fontsize'>Font Size</label>
                                    </div>

                                    <div class='col s3'>
                                        <button type="submit" name="action" value='rename' class="cyan accent-3 white-text btn waves-effect waves-light full {{#if user}}{{else}}disabled{{/if}}"
                                            {{#if user}}{{else}}disabled{{/if}}>
										Rename
										</button>
                                    </div>
                                    <div class='col s3'>
                                        <button type="submit" name="action" value='delete' class="cyan accent-3 white-text btn waves-effect waves-light full {{#if user}}{{else}}disabled{{/if}}"
                                            {{#if user}}{{else}}disabled{{/if}}>
										<i class="large material-icons">delete</i>Delete
										</button>
                                    </div>
                                </div>
                                <textarea id="yayEditor" style="height: 100%; font-size: 20px; background-color: #272822" name='content'>{{startText}}</textarea>
                                <div class='row'>
                                    <div class='col s12'>
                                        <button type='button' class="cyan accent-3 white-text btn waves-effect waves-light full" onclick='exportFile()'>
										Export
                                        </button>
                                    </div>
                                </div>
                                <script> 
                                    let teditor = document.getElementById('yayEditor');
                                    if (teditor.innerText === '') {
                                        teditor.innerText = {{{startText}}} || localStorage.content || '{//;Start by typing an opening brace.\nDocumentation is available here: https://blargbot.xyz/tags/ }';
                                    }
                                    var words = {{#tagseditor}}{{/tagseditor}};
                                    words.length--;
                                    var editor = CodeMirror.fromTextArea(document.getElementById("yayEditor"), {
                                        mode: 'cattag',
                                        lineNumbers: true,
                                        indentWithTabs: false,
                                        styleActiveLine: true,
                                        matchBrackets: true,
                                        smartIndent: true,
                                        autoCloseBrackets: false,
                                        theme: 'monokai',
                                        electricChars: true,
                                        lineWrapping: true,
                                        hintOptions: {
                                            words: words
                                        }
                                    });
                                    editor.on("inputRead", function (editor, change) {
                                        if (change.text[0] == '{') {
                                            editor.showHint();
                                        }
                                        editor.save();
                                        localStorage.content = editor.getValue();
                                    });

                                    function setFontSize(val) {
                                        var parsedVal = parseInt(val);
                                        if (!isNaN(parsedVal)) {
                                            document.getElementsByClassName("CodeMirror")[0].style.fontSize = parsedVal + 'px';
                                        }
                                        localStorage.fontSize = parsedVal;
                                    }
                                    function exportFile() {
                                        console.log('exporting', editor.getValue())
                                        var pom = document.createElement('a');
                                        pom.setAttribute('href', 'data:text/plain;charset=utf-8,' + 
                                        encodeURIComponent(editor.getValue()));
                                        pom.setAttribute('download', (document.getElementById('tagname').value || 'tag') + '.bbtag');
                                        pom.style.display = 'none';
                                        document.body.appendChild(pom);
                                        pom.click();
                                        document.body.removeChild(pom);
                                    }


                                    setFontSize(localStorage.fontSize || 20);
                                </script><br>
                                <!--	<input type="submit" value="Load" class="cyan accent-3 white-text btn waves-effect waves-light">-->

                            </form>

                        </div>
                    </div>
                </div>
            </div>

        </div>


        <!-- Menu Toggle Script -->
        <script>
            init();
             $(document).ready(function() {
    $('select').material_select();
  });
        </script>
    </main>
    <footer class="page-footer blue-grey darken-2">
        <div class="section">
            <div class="rows">
                <div class="col s12 m10 offset-m1 l6 offset-l3">
                    <p class="centre">
                        &copy; 2016 - Ratismal (stupid cat)
                    </p>
                </div>
            </div>
        </div>
    </footer>

</body>

</html>