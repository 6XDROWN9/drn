{
    "specs": {
        "lang": "Русский",
        "contributors": [
            "222263586913779712",
            "256049138712444929"
        ]
    },
    "comments": [
        "Это файл локализации blargbot'а.",
        "Для внесения своего вклада, пожалуйста следуйте следующим указаниям:",
        "1. Аргументы передаются в шаблонах {{имя}}. Не изменяйте их.",
        "2. Шаблоны используемые в шаблонах используются как [[путь.к.ключу]]. Не изменяйте их.",
        "3. Все команды должны содержать свойства `info` и `usage`.",
        "4. Для случайных выводов, выражения помещены в `.list` контекст. Каждое выражение отделёно новой строкой. Вы можете добавлять их, если необходимо.",
        "5. Перводы должны заканчиваться с той же пунктуацией что и английская en_US версия.",
        "6. Чтобы ваше имя не осталось незамеченым, добавьте свой Discord ID (или желаемое имя) с новой строчки в переводе `contributors`. IDs будут обработаны и отображены также как ваши имена с дискриминатом в дискорде.",
        "7. Продолжай перевод, холоп.",
        "Спасибо!"
    ],
    "generic": {
        "output": "Вывод:\n{{output}}",
        "nooutput": "Вывода нет...",
        "queryexpire": "Ваш запрос истечёт через {{length}} минут.",
        "resolveuser": {
            "nousers": "Пользователь не найден.",
            "pickuser": "Найдено {{length}} пользователей! Выберите одного из списка."
        },
        "resolverole": {
            "noroles": "Роль не найдена.",
            "pickrole": "Найдено {{length}} ролей! Выберите одного из списка"
        },
        "resolvechannel": {
            "nochannels": "Канал не найден.",
            "pickchannel": "Найдено {{length}} каналов! Выберите одного из списка."
        },
        "edited": "Изменено",
        "created": "Создано",
        "deleted": "Удалено",
        "menu": {
            "choices": "Страница {{page}} из {{max}}"
        },
        "nochange": "Ничего не изменено.",
        "commandhelp": "**Имя команды**: **__{{name}}__**\n\n**__Синтаксис__**\n```{{usage}}```\n**__Информация__**\n{{info}}\n\n**__Другие имена команды__**\n{{aliases}}",
        "example": {
            "id1": "111111111111111111",
            "id2": "222222222222222222",
            "id3": "333333333333333333"
        },
        "test": "[[[generic.example.id1]];[[generic.example.id2]];[[generic.example.id3]]]"
    },
    "menu": {
        "cancel": {
            "name": "Отменить",
            "description": "Закрыть это меню."
        },
        "confirm": {
            "name": "Потвердить",
            "description": "Подтверждает это меню."
        }
    },
    "emote": {
        "check": ":white_check_mark:",
        "x": ":x:",
        "okhand": ":ok_hand:"
    },
    "error": {
        "keyundef": "Не удалось найти локализацию '{{key}}'.",
        "memberundef": "Не удалось найти участника '{{member}}'.",
        "userundef": "Не удалось найти пользователя '{{user}}'.",
        "channelundef": "Не удалось найти канал '{{channel}}'.",
        "roleundef": "Не удалось найти роль '{{role}}'.",
        "pleasereport": "Если вы считаете, что это ошибка, сообщите нам!",
        "generic": "Что-то пошло не так, как надо!\n```\n{{message}}\n```\n[[error.pleasereport]]",
        "messagetoolong": "Ой! Я попытался отправить сообщение, но оно оказалось слишком длинным.\n[[error.pleasereport]]",
        "notenoughparams": "Недостаточно параметров! Используйте `{{prefix}}help {{name}}` для подробностей.\n\nОжидал `{{expected}}`, а получил `{{received}}`.",
        "tag": {
            "notfound": "Тега '{{tag}}' не существует.",
            "toomanyargs": "Слишком много аргументов (получено: {{received}} ожидалось: {{expected})",
            "toofewargs": "Недостаточно аргументов (получено: {{received}} ожидалось: {{expected}})",
            "isnan": "Ожидал '{{arg}}' будет числом, но получил '{{value}}",
            "maxlessthanmin": "Максимум должен быть больше минимума",
            "ccommandonly": "'{{tag}}' может использоваться только в пользовательских командах",
            "authorstaff": "Автор {{author}} должен быть персоналом сервера для использования '{{tag}}'",
            "noperms": "У бота нет прав '{{perm}}', необходимых тегу '{{tag}}'",
            "toolow": "Бот не может запустить '{{tag}}' потому что он ранжирован ниже, чем '{{target}}'",
            "unclosed": "Открывающая скобка без закрывающей [{{column}}:{{row}}]",
            "unopened": "Закрывающая скобка без открывающей [{{column}}:{{row}}]",
            "invalidradix": "Основание должно быть от 2 до 36, но получено '{{radix}}'",
            "notanarray": "Переменная '{{name}}' не является массивом (Получено: '{{value}}')",
            "notbool": "Переменная '{{name}}' не является значением типа boolean (Получено: '{{value}}')"
        },
        "inputtoolong": "Ваш ввод был слишком длинным! Максимальное количество символов - {{max}} для данной операции, но вы написали {{length}}."
    },
    "command": {
        "general": {
            "ping": {
                "info": "Понг!\nПоказывает задержку бота",
                "usage": "ping",
                "randmsg": [
                    "Существование - это ложь.",
                    "Ты когда-нибудь умрёшь, возможно скоро.",
                    "Тщетность бытия.",
                    "Вы на какой выходите?",
                    "Ничего рядом нет.",
                    "Истина - это ложь.",
                    "Прощение - это всё.",
                    "Твоё существование жалко.",
                    "Мы все уже давно мертвы.",
                    "Мяу.",
                    "Страх - это свобода.",
                    "В противоречии правда.",
                    "В подчинении освобождение.",
                    "Не хотите заключить контракт.",
                    "Забудь и продолжай жить."
                ],
                "final": "Понг! ({{time}}ms)"
            },
            "brainfuck": {
                "info": "Исполняет brainfuck код.",
                "usage": "brainfuck <код>",
                "flags": {
                    "p": "Показывает список указателей после выполнения.",
                    "i": "Определяет ввод для `,` оператора."
                }
            },
            "cat": {
                "info": "Показывает картинку с котиком.",
                "usage": "cat"
            },
            "ship": {
                "info": "Шипперит имя двух пользователей в одно",
                "usage": "ship <пользователь1> <пользователь2>",
                "final": "Ваше шипперское имя **{{name}}**!",
                "notenough": "Вы должны мне сказать кого шипперить!"
            },
            "tag": {
                "info": "Теги - это система публичных команд, которые может создать и запустить каждый, используя BBTag язык\n\n**Подкоманды**:\n{{subcommands}}\n\nДля подробной информации о субкомандах введите `b!t help <подкоманда>`\nДля подробной информации о BBTag поситите <https://blargbot.xyz/tags>.\nСоздавая тег, вы принимаете Условия Использования  (<https://blargbot.xyz/tags/tos>).",
                "usage": "tag <имя | подкоманда> [аргументы]",
                "dontown": "[[emote.x]] Вы не владете этим тегом!",
                "alreadyexists": "[[emote.x]] Тег с таким именем уже существует!",
                "notag": "[[emote.x]] Тега с таким именем нет.",
                "tagset": "[[emote.check]] Тег `{{name}}` {{process}}!",
                "tagrename": "[[emote.check]] Тег `{{old}}` был переименован в `{{new}}`.",
                "raw": "Исходный код {{name}}:\n```{{code}}```",
                "testoutput": "Тестовый вывод:\n\n{{output}}",
                "subcommand": {
                    "set": {
                        "usage": "tag set <имя> <контент>",
                        "info": "Создаёт или изменяет тег с указанными именем и контентом. Не заменяет теги, созданными другими пользователями"
                    },
                    "delete": {
                        "usage": "tag delete <имя>",
                        "info": "Удаляет ваш тег."
                    },
                    "rename": {
                        "usage": "tag rename <имя> <новое имя>",
                        "info": "Переименновывает ваш тег."
                    },
                    "raw": {
                        "usage": "tag raw <имя>",
                        "info": "Показывает исходный код тега."
                    },
                    "info": {
                        "usage": "tag info <имя>",
                        "info": "Отображает информацию о теге."
                    },
                    "transfer": {
                        "usage": "tag transfer <имя> <пользователь>",
                        "info": "Передаёт тег указанному пользователю. Переменные не будут переданы."
                    },
                    "top": {
                        "usage": "tag top",
                        "info": "Отображает теги, чаще всего добавляеммые в избранное."
                    },
                    "author": {
                        "usage": "tag author <имя>",
                        "info": "Отображает автора тега."
                    },
                    "search": {
                        "usage": "tag search <запрос>",
                        "info": "Ищет тег с именем, содержащим ваш запрос."
                    },
                    "list": {
                        "usage": "tag list [@пользователь]",
                        "info": "Отображает список всех (необязательно всех) тегов, созданных указанным пользователем."
                    },
                    "favorite": {
                        "usage": "tag favorite <имя>",
                        "info": "Добавляет в избранное указанный тег."
                    },
                    "report": {
                        "usage": "tag report <имя>",
                        "info": "Состовляет жалобу на тег, нарущающий Условия Использования. Пожалуйста, используйте ответственно."
                    },
                    "test": {
                        "usage": "tag test <код>",
                        "info": "Исполняет указанный код в тестовоой среде."
                    },
                    "help": {
                        "usage": "tag help [подкоманда]",
                        "info": "Отображает это сообщение!"
                    },
                    "docs": {
                        "usage": "tag docs [подтег]",
                        "info": "Даёт ссылку на BBTag документацию, или предоставляет информацию об указаном теге."
                    },
                    "setdesc": {
                        "usage": "usage",
                        "info": "info"
                    },
                    "setusage": {
                        "usage": "usage",
                        "info": "info"
                    }
                },
                "subcommandnotfound": "Не могу найти подеоманду `{{subcommand}}`.",
                "transferprompt": "{{target}}, {{user}} хочет передать владение тегом `{{tag}}` вам. Вы согласны?\nПередача не включает в себя переменные.",
                "nobots": "[[emote.x]] Вы не можете отдать тег боту!",
                "transfercancelled": "[[emote.x]] Передача была отменена.",
                "transfercomplete": "[[emote.check]] {{user}} теперь владелец тега `{{tag}}`.",
                "taginfo": "__**Тег | {{name}}**__\nАвтор: **{{author}}**\nПоследнее изменение: **{{lastModified}}**\nТег использовали **{{uses}} раз**!\nТег добавляли в избранное **{{favourites}} раз**!\n\n{{desc}}",
                "descupdate": "Описание тега `{{tag}}` было обновлено.",
                "descreset": "Описание тега `{{tag}}` было сброшено.",
                "subcommandconflict": "Вы не можете использовать имя `{{name}}` потому что такое имя уже есть у подкоманды!",
                "toptagformat": "{{index}}. **{{name}}** ({{author}})\n    - Избранное: {{favourites}} Использований: {{uses}}",
                "toptags": "Вот вам топ 10 тегов!\n\n{{tags}}",
                "tagauthor": "Тег `{{tag}}` был создан **{{author}}**.",
                "favouriteadd": "Тег `{{tag}}` был добавлен в избранное.",
                "favouriteremove": "Тег `{{tag}}` был удалён из избранного.",
                "favourites": "У вас {{count}} тегов в вашем избранном.\n```fix\n{{tags}}\n```"
            },
            "ccommand": {
                "info": "Пользовательские команды - это система комманд, которую модераторы могут создать для пользователей, используя BBTag язык.\n\n**Подкоманды**:\n{{subcommands}}\n\nДля подробной информации о подкомандах, введите `b!t help <подкоманда>`\nДля подробной информации о BBTag, посетите <https://blargbot.xyz/tags>.",
                "usage": "cc <подкоманда> [аргументы]",
                "subcommand": {
                    "set": {
                        "usage": "cc set <имя> <контент>",
                        "info": "Создаёт или изменяет пользовательскую команду с указанными именем и контентом. Не заменяет теги созданные кем-либо другим."
                    },
                    "delete": {
                        "usage": "cc delete <имя>",
                        "info": "Удаляет пользовательскую команду."
                    },
                    "rename": {
                        "usage": "cc rename <имя> <новое имя>",
                        "info": "Переименовывает пользовательскую команду."
                    },
                    "author": {
                        "usage": "cc author <имя>",
                        "info": "Показывает автора пользовательской команды."
                    },
                    "transfer": {
                        "usage": "cc transfer <имя> <пользователь>",
                        "info": "Передаёт права владения пользовательской командой другому. Передача прав должна быть обоюдной."
                    },
                    "list": {
                        "usage": "cc list",
                        "info": "Показывает список пользовательских команд в гильдии."
                    },
                    "test": {
                        "usage": "cc test",
                        "info": "Выполняет команду в контексте вашего аккаунта."
                    },
                    "help": {
                        "usage": "cc help [подкоманда]",
                        "info": "Отображает это сообщение!"
                    }
                },
                "dontown": "[[emote.x]] Вы не владеете данной пользовательской командой!",
                "notag": "[[emote.x]] Пользовательской команды с таким именем не существует.",
                "tagset": "[[emote.check]] Пользовательская команда `{{name}}` {{process}}!",
                "tagrename": "[[emote.check]] Пользовательская команда `{{old}}` была переименована в `{{new}}`",
                "raw": "Код команды {{name}}:\\n```{{code}}```",
                "alreadyexists": "Пользовательская команда с таким именем уже существует.",
                "testoutput": "Тестовый вывод:\\n\\n{{output}}"
            },
            "locale": {
                "info": "Устанавливает, какие сообщение будут локализироваться.",
                "usage": "locale",
                "set": "Ваш язык был изменён на {{locale}}!",
                "list": "Ваш текущий язык: {{current}}\n\nПожалуйста, выберите какой язык вы хотите использовать."
            },
            "tokenify": {
                "info": "info",
                "usage": "usage"
            }
        },
        "admin": {
            "mod": {
                "setrole": "Роль сотрудников была обновлена.",
                "rolequery": "Выберите роли модератора. Пользователи с такими ролями смогут использовать команды модерации.",
                "info": "Устанавливает какие пользователи/роли считать персоналом.",
                "usage": "mod <подкоманда>",
                "subcommand": {
                    "user": {
                        "usage": "mod user <add | remove> <пользователь>...",
                        "info": "Добавляет или удаляет указаного(ых) пользователя(ей) из списка персонала."
                    },
                    "role": {
                        "usage": "mod user role",
                        "info": "Показывает диалог с возможность выбрать и отменить выбор ролей."
                    }
                }
            }
        },
        "image": {
            "cat": {
                "info": "Отдаёт этого милого любимого прелестного котёночка.\nКакая милашка!",
                "usage": "cat"
            }
        }
    },
    "tag": {
        "comment": {
            "desc": "Определяет область, которая не будет обработана ботом.",
            "example": {
                "in": "Это будет показано {//;А это нет}",
                "out": "Это будет показано"
            }
        },
        "void": {
            "desc": "Не пропускает вывод из подтега. Отличается от комментариев тем, что парсится, но не отображается",
            "example": {
                "in": "Это будет отображено {void;А это нет{set;~temp;а вот это будет запомнено}} {get;~temp}",
                "out": "Это будет отображено  а вот это будет запомнено"
            }
        },
        "randint": {
            "desc": "Возвращает случайное число в заданом промежутке. `минимум` по умолчанию равен `0`",
            "example": {
                "in": "Первый: {randint;5}, второй: {randint;10;20}",
                "out": "Первый: 2, второй: 17"
            }
        },
        "array": {
            "filter": {
                "desc": "Проходит по массиву, запоминая в локальную переменную `i` текущий элемент массива. Если указано имя переменной `varName`, запоминает в неё.\n\nВозвращает новый массив только c теми элементами, которые в результате прохода вернули `true` или `1`.",
                "example": {
                    "in": "{set;array;[1;2;3;4;5]}\n{filter;array;{logic;{get;i};<;3}}",
                    "out": "[1;2]"
                }
            },
            "foreach": {
                "desc": "Прохожит по массиву, запоминая текущий элемент в локальную переменную `i`. Если указано имя переменной `varName`, запоминает в неё.",
                "example": {
                    "in": "{set;array;[1;2;3;4;5]}\n{array.foreach;array;Элемент:{get;i}{newline}}",
                    "out": "Элемент:1\nЭлемент:2\nЭлемент:3\nЭлемент:4\nЭлемент:5"
                }
            },
            "get": {
                "desc": "Возвращает элемент массива под номером `index`.",
                "example": {
                    "in": "{set;array;[1;2;3;4;5]}\nЭлемент номер 3: {array.get;array;3}",
                    "out": "Элемент номер 3: 4"
                }
            },
            "isarray": {
                "desc": "Возвращает true, если ланный элемент является массивом и false в противном случае. Вы не можете испоьзовать имена переменных.",
                "example": {
                    "in": "{set;arr1;[this;is;an;array]}\n{set;arr2;this is not an array}\nмассив 1: {array.isarray;{get;arr1}}\nмассив 2: {array.isarray;{get;arr2}}",
                    "out": "массив 1: true\nмассив 2: false"
                }
            },
            "join": {
                "desc": "Соединяет элементы массива указанным `разделителем`.",
                "example": {
                    "in": "{set;array;[1;2;3;4;5]}\n{array.join;array;,{space}}",
                    "out": "1, 2, 3, 4, 5"
                }
            },
            "length": {
                "desc": "Возвращает длину указанного массива.",
                "example": {
                    "in": "{set;array;[1;2;3;4;5]}\n{array.length;array}",
                    "out": "5"
                }
            },
            "map": {
                "desc": "Проходит по массиву, запоминая текущий элемент в локальную переменную `i`. Если указано имя переменной `varName`, запоминает в неё.\n\nВозвращает новый массив, в котором каждый элемент - результат прохода.",
                "example": {
                    "in": "{set;array;[1;2;3;4;5]}\n{array.map;array;{math;i;*;2}}",
                    "out": "[2;4;6;8;10]"
                }
            },
            "pop": {
                "desc": "Возвращает последний элемент массива, удаляя элемент из него.",
                "example": {
                    "in": "{set;array;[1;2;3;4;5]}\n{array.pop;array}\n{get;array}",
                    "out": "5\n[1;2;3;4]"
                }
            },
            "push": {
                "desc": "Добавляет элемент в конец массива. Возвращает изменённый массив.",
                "example": {
                    "in": "{set;array;[1;2;3;4;5]}\n{array.push;array;6}",
                    "out": "[1;2;3;4;5;6]"
                }
            },
            "set": {
                "desc": "Устанавливает значение элемента массива в указанной позиции `index`.",
                "example": {
                    "in": "{set;array;[1;2;3;8;5]}\n{get;array}\n{array.set;array;3;4}\n{get;array}",
                    "out": "[1;2;3;8;5]\n\n[1;2;3;4;5]"
                }
            },
            "shift": {
                "desc": "Возвращает первый элемент массива, удаляя элемент из него.",
                "example": {
                    "in": "{set;array;[1;2;3;4;5]}\n{array.shift;array}\n{get;array}",
                    "out": "1\n[2;3;4;5]"
                }
            },
            "slice": {
                "desc": "Возвращает часть массива, начиная с элемента у позиции `start` и окончивая элементом у позиции `end`. Если `end` не указан, возвращает до конца массива.",
                "example": {
                    "in": "{set;array;[1;2;3;4;5]}\n{slice;array;3}\n{slice;array;2;4}",
                    "out": "[4;5]\n[3;4]"
                }
            },
            "sort": {
                "desc": "Возвращает отсортированный массив (по умолчанию по возрастанию).\n\nЕсли указана функция `funciton`, сортировка будет проводится на основе результатов её выполнения. Это задаст две локальные переменные: `a` (или `varNameOne`) и `b` (или `varNameTwo`).\n\nФункция должна возвращать число. Если число больше нуля, то`a` будет считаться больше `b`. Нечисленный результат будет конвертирован в 0, т.е. оба элемента будут считаться равными.",
                "example": {
                    "in": "{set;array;[2;5;1;6;3;7]}\n{sort;array}\n{sort;array;{math;b;-;a}}",
                    "out": "[1;2;3;5;6;7]\n[7;6;5;3;2;1]"
                }
            },
            "splice": {
                "desc": "Удаляет из массива `deleteCount` элементов, начиная с элемента в позиции `start`. Оставшиеся элементы `items` в конце массива будут присоединены, начиная с позиции `start`\nВозвращает удалённые элементы.",
                "example": {
                    "in": "{set;array;[1;2;3;4;5]}\n{array.splice;array;2;2;вставленные;элементы}\n{get;array}",
                    "out": "[3;4]\n[1;2;вставленные;элементы;5]"
                }
            },
            "split": {
                "desc": "Разделяет текст `text` по разделителю `delimiter`, возвращая массив строк.",
                "example": {
                    "in": "{array.split;Этот текст будет разделён пробелом;{space}}",
                    "out": "[Этот;текст;будет;разделён;пробелом]"
                }
            },
            "unshift": {
                "desc": "Вставляет значение `value` в начало массива и возвращает изменённый массив.",
                "example": {
                    "in": "{set;array;[1;2;3;4;5]}\n{array.unshift;array;0}",
                    "out": "[0;1;2;3;4;5]"
                }
            }
        },
        "channel": {
            "id": {
                "desc": "Возвращает ID текущего или указанного канала.",
                "example": {
                    "in": "{channel.id}",
                    "out": "[[generic.example.id1]]"
                }
            },
            "nsfw": {
                "desc": "Возвращает является ли текущий канал NSFW.",
                "example": {
                    "in": "{channel.nsfw}",
                    "out": "false"
                }
            },
            "name": {
                "desc": "Возвращает имя текущего или указанного канала.",
                "example": {
                    "in": "{channel.name;#general}",
                    "out": "general"
                }
            },
            "position": {
                "desc": "Вовращает позицию текущего или указанного канала.",
                "example": {
                    "in": "{channel.position}",
                    "out": "1"
                }
            },
            "topic": {
                "desc": "Возвращает заголовок текущего или указанного канала (только текст)",
                "example": {
                    "in": "{channel.topic}",
                    "out": "Это пример заголовка канала."
                }
            },
            "type": {
                "desc": "Возвращает тип текущего или указанного канала (\"text\" для текстовых и \"voice\" для войса).",
                "example": {
                    "in": "{channel.type}",
                    "out": "text"
                }
            }
        },
        "general": {
            "clean": {
                "desc": "Очищает предоставленный текст, сокращая пробелы.",
                "example": {
                    "in": "{clean;  раз\n\n                два\n  \n\n    три}",
                    "out": "раз\nдва\nтри"
                }
            },
            "//": {
                "desc": "Определяет область, которая не будет обработана ботом.",
                "example": {
                    "in": "Это будет отображено {//;А это нет}",
                    "out": "Это будет отображено"
                }
            },
            "get": {
                "desc": "Возвращает хранимую переменную с указанным именем. Префиксы переменных могут изменять пул, в котором производится поиск.",
                "example": {
                    "in": "{set;var;Это переменная.}\n{get;var}",
                    "out": "Это переменная."
                }
            },
            "set": {
                "desc": "Задаёт хранимую переменную с указанным именем. Префиксы переменных могут изменять пул, в котором переменная будет сохранена.",
                "example": {
                    "in": "{set;var;Это переменная.}\n{get;var}",
                    "out": "Это переменная."
                }
            },
            "trim": {
                "desc": "Удаляет пробелы до и после указанного текста. Чтобы удалить пробелы внутри текста используйте {clean} тег.",
                "example": {
                    "in": "{trim;{space;5}Привет{space;5}}",
                    "out": "Привет"
                }
            },
            "void": {
                "desc": "Не пропускает вывод из подтега. Отличается от комментариев тем, что парсится, но не отображается",
                "example": {
                    "in": "Это будет отображено {void;А это нет {set;~temp;а вот это будет запомнено}} {get;~temp}",
                    "out": "Это будет отображен  а вот это будет запомнено"
                }
            },
            "newline": {
                "desc": "Вовзращает указанное количество символов новой строки, по умолчанию 1.",
                "example": {
                    "in": "Первый{newline;5}Второй",
                    "out": "Первый\n\n\n\n\nВторой"
                }
            },
            "space": {
                "desc": "Возвращает указанное количество пробелов, по умолчанию 1.",
                "example": {
                    "in": "Один{space;5}Два",
                    "out": "Один     Два"
                }
            }
        },
        "guild": {
            "createdat": {
                "desc": "Возвращает время сосздание гильдии в формате Unix (в милисекундах).",
                "example": {
                    "in": "{guild.createdat}",
                    "out": "1466379030450"
                }
            },
            "channels": {
                "desc": "Возвращает каналы текущей гильдии в виде массива.",
                "example": {
                    "in": "{guild.channels}",
                    "out": "[[[generic.example.id1]];[[generic.example.id2]];[[generic.example.id3]]]"
                }
            },
            "icon": {
                "desc": "Возвращает ссылку на аватар текущей гильдии.",
                "example": {
                    "in": "{guild.icon}",
                    "out": "https://cdn.discordapp.com/icons/194232473931087872/2e9d173fc1461ff9e4672cb8782978e7.png?size=512"
                }
            },
            "id": {
                "desc": "Возврващает ID текущей гильдии.",
                "example": {
                    "in": "{guild.id}",
                    "out": "[[generic.example.id1]]"
                }
            },
            "name": {
                "desc": "Возвращает имя текущей гильдии.",
                "example": {
                    "in": "{guild.name}",
                    "out": "Кошачий городок"
                }
            },
            "owner": {
                "desc": "Возвращает ID владельца гильдии.",
                "example": {
                    "in": "{guild.owner}",
                    "out": "[[generic.example.id1]]"
                }
            },
            "region": {
                "desc": "Возвращает регион текущей гильдии.",
                "example": {
                    "in": "{guild.region}",
                    "out": "us-west"
                }
            },
            "roles": {
                "desc": "Возвращает роли текущей гильдии ввиде масива.",
                "example": {
                    "in": "{guild.roles}",
                    "out": "[[[generic.example.id1]];[[generic.example.id2]];[[generic.example.id3]]]"
                }
            }
        },
        "logic": {
            "if": {
                "desc": "Если значение `value` равно `true` или `1`, выполняет ветку `then`.\nЕсли значение `value` равно `false` или `0`, выполняет ветку `else`.\nВ других случаях, выдаёт ошибку.\n\nИспользуйте его с {logic} тегом.",
                "example": {
                    "in": "{if;true;Это будет отображено.;Это не будет отображено.}",
                    "out": "Это будет отображено."
                }
            },
            "logic": {
                "desc": "Выполняет логические операции `augend` и `operands`, возвращая `true` или `false`.\n\nОператоры сравнения:\n - `==` - равно\n - `!=` - не равно\n - `<` - меньше\n - `<=` - меньше или равно\n - `>` - больше\n - `>=` - больше или равно\n - `startswith` - аргумент начинается с операнда\n - `endswith` - аргумент кончается операндом\n - `includes` - аргумент содержит операнд\n\nЛогические операторы:\n - `&&` - возвращает истину (true), если оба операнда истины (true)\n - `||` - возвращает истину (true), если хотя бы один операнд истинен (true)\n - `XOR` - возвращает истину (true) если один из операторов истинен (true) (но не оба)\n\nДругие операторы:\n - `!` - инвертирует операнд (истина (true) становится ложью (false) и наоборот)\n",
                "example": {
                    "in": "{logic;5;==;6}\n{logic;5;!=;6;&&;5;>;6}\n{logic;5;>=;6;||;5;<;6}\n{logic;5;<=;6;xor;true}\n{logic;1234;startswith;12}\n{logic;1234;endswith;34}\n{logic;1234;includes;23}\n{logic;!;true}\n{logic;!;5;!=;5}",
                    "out": "false\nfalse\ntrue\nfalse\ntrue\ntrue\ntrue\nfalse\ntrue"
                }
            }
        },
        "math": {
            "abs": {
                "desc": "Возвращает абсолютное значение указанного числа (не отрицательное).",
                "example": {
                    "in": "{math.abs;-3523}",
                    "out": "3523"
                }
            },
            "base": {
                "desc": "Переводит число `number` из `origin` системы исчисления (по умолчанию 10) в `radix` систему исчисления.",
                "example": {
                    "in": "{math.base;FA;16;10}",
                    "out": "250"
                }
            },
            "ceil": {
                "desc": "Округляет указанное число до ближайшего целого сверху.",
                "example": {
                    "in": "{math.ceil;1.25}",
                    "out": "2"
                }
            },
            "floor": {
                "desc": "Округляет указанное число до ближайшего целого снизу.",
                "example": {
                    "in": "{math.floor;1.75}",
                    "out": "1"
                }
            },
            "math": {
                "desc": "Вычисляет значение по указанным выражениям, с следующими операторами:\n\n- `^` - возвести в степень\n - `/` - разделить\n - `*` - умножить\n - `+` - прибавить\n - `-` - вычесть\n - `&` - побитовое умножение\n - `|` - побитовое сложение\n - `XOR` - побитовое вычитание\n\nОператоры исполняются в порядке выполнения операций (выражения в скобках, возведение в степень, деление, умножение, сложение, вычитание, побитовые операции).\n\nЕсли оператор не указан, берётся последний использованный оператор (по умолчанию сложение).\n\nСкобки можно получить путём использования вложенного {math} тега.\n\nЕсли первый операнд `operand` или второй `augend` не могут быть переведены в численное значение, переменная с тем же именем будет использована. Если и эта переменная не является числом, будет выдана ошибка.",
                "example": {
                    "in": "Выражение: 1 + (2^2 * 3) - (4 / 5)\nОтвет: {math;1;+;2;^;2;*;3;-;4;/;5}\n\nВыражение: 4 + 6 + 8\nОтвет: {math;4;6;8}\n\nВыражение: 01001010 | 11000100 & 11111011\n{trim;{set;bin1;{math.base;01001010;2;10}}\n{set;bin2;{math.base;11000100;2;10}}\n{set;bin3;{math.base;11111011;2;10}}\nОтвет: {base;{math;bin1;|;bin2;|;bin3};10;2}}",
                    "out": "Выражение: 1 + (2^2 * 3) - (4 / 5)\nОтвет: 12.2\n\nВыражение: 4 + 6 + 8\nОтвет: 18\n\nВыражение: 01001010 | 11000100 & 11111011\nОтвет: 11111111"
                }
            },
            "parsefloat": {
                "desc": "Пытается перевести указанный текст в действительное число.",
                "example": {
                    "in": "{math.parsefloat;2.5}\n{math.parsefloat;не число}",
                    "out": "2.5\nNaN"
                }
            },
            "parseint": {
                "desc": "Пытается перевести указанный текст в целое число.",
                "example": {
                    "in": "{math.parseint;2.5}\n{math.parseint;не число}",
                    "out": "2\nNaN"
                }
            },
            "randint": {
                "desc": "Возвращает случайное число в указаном диапазоне. `min` по умолчанию равен `0`",
                "example": {
                    "in": "Первое: {randint;5}, второе: {randint;10;20}",
                    "out": "Первое: 2, второе 17"
                }
            },
            "round": {
                "desc": "Округляет данное число `number` до указанных десятичных знаков после запятой `plases`, по умолчанию 0.",
                "example": {
                    "in": "{math.round;5.125}\n{math.round;5.125;1}\n{math.round;5.125;2}",
                    "out": "5\n5.1\n5.13"
                }
            }
        },
        "message": {
            "id": {
                "desc": "Возвращает ID",
                "example": {
                    "in": "{message.id}",
                    "out": "[[generic.example.id1]]"
                }
            }
        },
        "role": {
            "color": {
                "desc": "Возвращает цвет указанной роли в шетснадцатиричном формате.",
                "example": {
                    "in": "#{role.color;цветная роль}",
                    "out": "#2ECC71"
                }
            },
            "id": {
                "desc": "Возвращает ID указанной роли.",
                "example": {
                    "in": "{role.id;крутая роль}",
                    "out": "[[generic.example.id1]]"
                }
            },
            "mention": {
                "desc": "Вовзращает упоминание указанной роли.",
                "example": {
                    "in": "{role.mention;крутая роль}",
                    "out": "@крутая роль"
                }
            },
            "name": {
                "desc": "Возвращает имя указанной роли",
                "example": {
                    "in": "{role.mention;крутая роль}",
                    "out": "крутая роль"
                }
            },
            "position": {
                "desc": "Возвращает позицию указанной роли.",
                "example": {
                    "in": "{role.position;крутая роль}",
                    "out": "5"
                }
            }
        },
        "user": {
            "avatar": {
                "desc": "Возвращает ссылку на аватарку цказанного пользователя, по умолчанию пользователя вызвавшего команду.",
                "example": {
                    "in": "{user.avatar}",
                    "out": "https://cdn.discordapp.com/avatars/[[generic.example.id1]]/avatarhash.png"
                }
            },
            "createdat": {
                "desc": "Возвращает дату создания указанного пользователя (по умолчанию пользователя вызвавшего команду) в формате Unix (в миллисекундах)",
                "example": {
                    "in": "{user.createdat}",
                    "out": "1444710446104"
                }
            },
            "discrim": {
                "desc": "Возвращает дискриминатор указанного пользователя, по умолчанию пользователя вызвавшего команду.",
                "example": {
                    "in": "{user.discrim}",
                    "out": "1111"
                }
            },
            "fullname": {
                "desc": "Возвращает имя и дискриминатор указанного пользователя, по умолчанию пользователя вызвавшего команду.",
                "example": {
                    "in": "{user.fullname}",
                    "out": "person#1111"
                }
            },
            "game": {
                "desc": "Возвращает игру, в которую играет указанный пользователь, по умолчанию пользователь вызвавший команду. Если пользователь ни во что не играет, ничего не возвращает.",
                "example": {
                    "in": "{user.game}",
                    "out": "с BBTag!"
                }
            },
            "id": {
                "desc": "Возвращает ID указанного пользователя, по умолчанию пользователя вызвавшего команду.",
                "example": {
                    "in": "{user.id}",
                    "out": "[[generic.example.id1]]"
                }
            },
            "joinedat": {
                "desc": "Возвращает дату присоединение к гильдии указанного пользователя, по умолчанию пользователя вызвавшего команду, в формате Unix (в миллисекундах).",
                "example": {
                    "in": "{user.joinedat}",
                    "out": "1466379030499"
                }
            },
            "mention": {
                "desc": "Упоминает указанного пользователя, по умолчанию пользователя вызвавшего команду.",
                "example": {
                    "in": "{user.mention}",
                    "out": "@person"
                }
            },
            "name": {
                "desc": "Возвращает имя указанного пользователя, по умолчанию пользователя вызвавшего команду.",
                "example": {
                    "in": "{user.name}",
                    "out": "person"
                }
            },
            "nick": {
                "desc": "Вовзращает ник указанного пользователя, по умолчанию пользователя вызвавшего команду.",
                "example": {
                    "in": "{user.nick}",
                    "out": "Крутецкий Ник"
                }
            },
            "roles": {
                "desc": "Возвращает роли которые имеет указанный пользователь, по умолчанию пользователь вызвавший команду, в виде массива.",
                "example": {
                    "in": "{user.roles}",
                    "out": "[[[generic.example.id1]];[[generic.example.id2]];[[generic.example.id3]]]"
                }
            },
            "setnick": {
                "desc": "Устанавливает ник для указанного пользователя, по умолчанию пользователя вызвавшего команду.",
                "example": {
                    "in": "{user.setnick;Ещё более крутецкий ник}",
                    "out": "(ник установлен)"
                }
            },
            "status": {
                "desc": "Возвращает статус указанного пользователя, по умолчанию пользователя вызвавшего команду. Возможные значения: \"online\" - В сети, \"away\" - Не активен, \"dnd\" - Не беспокоить, \"офлайн\" - Не в сети.",
                "example": {
                    "in": "{user.status}",
                    "out": "online"
                }
            }
        }
    }
}