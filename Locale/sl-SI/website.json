{
    "language": "Angleščina",
    "header": {
        "login": "Prijava",
        "logout": "Odjava",
        "commands": "Ukazi",
        "bbtag": "BBTag",
        "subtags": "Podoznake",
        "dashboard": "Nadzorna plošča"
    },
    "generic": {
        "loading": "Nalaganje",
        "collapse": "Skrij vse",
        "expand": "Pokaži vse",
        "search": "Filtriraj...",
        "noresults": "O ne! Ni zadetkov.",
        "resultsfound": "Ujemanje rezultatov:"
    },
    "index": {
        "desc": "blargbot je večnamenski robot za Discord, namenjen zagotavljanju kvalitetnih ukazov in storitev, vključno z beleženjem pogovorov in poglobljenemu sistemu ukazov, narejenih po meri.",
        "commands": {
            "title": "Ukazi",
            "desc": "blargbot je opremljen z številnimi ukazi, ki so dokumentirani in kategorizirani za vaše udobje."
        },
        "bbtag": {
            "title": "BBTag",
            "desc": "blargbot uporablja sofisticiran sistem oznak, imenovan BBTag, ki ga lahko uporabite, da ustvarite napredne, po meri ukaze."
        },
        "customization": {
            "title": "Prilagoditev",
            "desc": "Razumemo, da ni čisto vsaka združba enaka, zato ima blargbot možnost obsežne prilagoditeve. Nadzirate lahko, točno katere vloge lahko uporabljajo katere ukaze, določite predpone narejene po meri in celo spremenite prikazni jezik!"
        },
        "moderation": {
            "title": "Moderiranje",
            "desc": "Potrebujete nekaj, s čimer lahko nadzorujete klepet? blargbot je opremljen z veliko opcijami za nadzorovanje, od osnovnih operacij, kot so prepovedi in utišanje, do bolj naprednih stvari, kot so beleženje klepeta ali samodejno cenzuriranje."
        },
        "opensource": {
            "title": "Open-Source",
            "desc": "Širjenje je skrbljenje! blargbot je popolnoma open-source pod licenco GNU AGPLv3. Vzemite si priložnost in preberite, kako vse deluje. Če uporabite del kode v vašem lastnem projektu, ste zadolženi meni nameniti zasluge. Poglejte licenco za več podrobnosti."
        },
        "suggestions": {
            "title": "Odprti za predloge",
            "desc": "Imate predlog za bot-a? Vesel bom, če izvem! Našel napako? Tudi to bi rad izvedel! Lahko mi predlagate karkoli z uporabo ukaza \"predlagaj\", z pridružitvijo moji združbi ali z pošiljanjem obvestila."
        }
    },
    "bbtag": {
        "main": "# BBTag\n> Ne sme biti zamenjan z BBCode!\n\nBBTag, baziran po šabloni programskega jezika, je zasnovan tako, da zagotavlja močno konstrukcijo za proizvedbo ukazov, narejenih po meri.\n\n### Terminologija\n\n-`Oznaka` se nanaša na blok kode BBTag, pa naj bo javna oznaka ali ukaz po meri.\n-`Podoznaka` se nanaša na BBTag komponento. Napredna `oznaka` je narejena iz veliko `podoznak`.\n-`Razred` se nanaša na skupino `podoznak`.",
        "subtags": {
            "title": "Podoznake",
            "desc": "## Podoznake\n\nPodoznake so osnovni gradnik za BBTag. Izvajajo dinamične funkcije, pa naj bo to iskanje imena uporabnika ali računanje matematike. Poglejmo si primer podoznake:\n```\n {math.randint;1;10}\n```\nKo je to zagnano, to lahko vrne nekaj takega:\n```\n6\n```\nKot lahko vidite, `math.randint` oznaka izpiše naključno celo število med omejitvami, ki smo mu jih dali.\n\n### Anatomija podoznake\n\nPodoznaka je sestavljena iz večih komponent. Sintaktični diagram lahko izgleda tako:\n```\n{[class.]name[![var]]([;args]...|=<navedeniArgumenti>...}\n```\nUf, ok. To je kar begajoče, ampak potrpite z mano!\n\n#### Razredi\n\n> `[class.]ime`\n\nPodoznake so razdeljene v skupine, imenovane **razredi**. Vsak razred ima zadolženo specifično vrsto namena. Na primer, `matematični` razred bi vseboval podoznake, ki se ukvarjajo s številkami. Prav tako razred `uporabnik` bi vseboval podoznake, ki dajo informacijo o uporabnikih. Razredi proizvajajo sistem organizacije.\n\nPri uporabi podoznake bi raje uporabljali `{class.name}`. To izboljša berljivost. Vendar natančno navajanje razreda je ponavadi neobvezno. BBTag ve, da je `{math.randint}` in `{randint}` enaka podoznaka. To se imenuje **implicitno \"predalčkanje\" po razredih**. Izjema tem podoznakam je `splošni` razred, ki naj bi bil uporabljen *brez* natančnega razreda.\n\nVendar morate biti pazljivi z posrednim deljenjem po razredih! Včasih imajo lahko razredi podoznake z enakim imenom. Na primer: `{user.id}` in `{channel.id}` imata oba oznake z imenom `id`. Če boste poskusili uporabljati posredno deljenje po razredih z podoznako, ki ima izhod v več razredov, bo vrnilo napako!\n\n#### Preusmerjanje\n\n> `[![var]]`\n\nPreusmejanje je posebnost, ki vam dovoljuje, da preusmerjate izhod podoznake, ali k spremenljivki, ali pa v praznino. To lahko pomaga počistiti vašo kodo.\n\nNa primer, če iz nekega razloga ne želite, da podoznaka ne izpiše ničesar, lahko dodate `!` za podoznako da jo utišate. Sledeče linije so enakovredne:\n```\n{void;{math.randint;1;10}}\n{math.randint!;1;10}\n```\nČe želite shraniti izpis podoznake spremenljivki, lahko dodate `!imeSpremenljivke` za imenom podoznake. Sledeče linije so enakovredne:\n```\n{set;randomInteger;{math.randint;1;10}}\n{math.randint!randomInteger;1;10}\n```\nPreusmerjanje izhoda je malo hitreje izveseti, kot pa uporabiti celotno sintakso.\n\n#### Argumenti\n\n> `[;args]...`\n\nParametre lahko prenesete v podoznake. Le-ti so ločeni s podpičji `;`. Argumenti so različni za vsako podoznako in dokumentacija za le-te je lahko najdena na strani podoznak.\n\n##### Imenovani argumenti\n\n> `=<namedArgs>...`\n\nPonavadi je vrstni red argumentov zelo pomemben. Vendar lahko imenovane ekvivalente uporabite namesto tega. To je narejeno z uporabo `=` simbola namesto podpičja in potem s specifikacijo ključne-vrednosti oznake v obliki `{*key;value}`.\n\nNa primer, uporaba `{math.randint}` je `{math.randint;min;max}`. Imena argumentov so `min` in `max`. Sledeče uporabe so ekvivalentne:\n```\n{math.randint;1;10}\n{math.randint=\n    {*min;1}\n    {*max;10}\n}\n```\nNe morete uporabljati obeh imenovanih argumentov in urejenih argumentov znotraj enake podoznake."
        },
        "variables": {
            "title": "Spremenljivke",
            "desc": "## Spremenljivke\n\nBBTag ima na voljo veliko število različnih vrst spremenljivk, vsaka z drugačnimi možnostmi. Te spremenljivke se lahko uporablja za številne operacije in funkcije.\n\n### Imena\n\nIme spremenljivke je narejeno iz dveh delov: `predpone` in `imena`. Tukaj je sintaktični diagram:\n\n> `[prefix]Ime`\n\nEnostavno, kajne?\n\n### Okvirji\n\n**Okvir** se nanaša na to, od kod lahko dostopate spremenljivko in kako dolgo trajajo. S tem, ko znate uporabljati te okvirje, vam lahko zelo pomaga pri ustvaritvi oznake!\n\nDrugi pogled na okvirje je lokacija, kjer so *shranjeni.* Na primer, lokalne spremenljivke so shranjene pri oznaki sami, kjer pa so avtorske spremenljivke shranjene pri uporabniku, ki je ustvaril to oznako.\n\nPojdimo čez vse različne okvirje, od najmanjšega do največjega.\n\n#### **Začasni** okvirji\n> Brez predpone\n\nZačasne spremenljivke so najbolj osnovne in največkrat uporabljene spremenljivke, ker imajo najmanjši okvir. Te spremenljivke *nikol niso shranjene v podatkovni bazi*, prenehajo obstajati po tem, ko je oznaka izvedena. Kot takšne so najhitrejše za uporabljanje.\n\nUporabljajte začasne spremenljivke za stvari, ki ne rabijo biti stalne med uporabo.\n\n#### **Lokalni** okvir\n> Predpona: `~`\n\nLokalne spremenljivke so dosegljive samo za oznako, ki jih je naredila. Opravljajo svoje funkcije skoraj identično kot začasne spremenljivke, vendar so stalne med uporabljanjem.\n\nLokalne spremenljivke so shranjene neposredno z oznako.\n\n#### Okvirji **serverja**\n> Predpona `_`\n\nSpremenljivke serverja so dostopne samo v serverju, v katerem so bile ustvarjene. So najbolj primerne za ukaze po meri, saj si katerikoli ukaz po meri na serverju deli isto skupino spremenljivk, ne glede na avtorja.\n\nVzemite v obzir, da javne oznake in ukazi po meri *ne* delijo enakega okvira serverjev, zato naključne oznake ne morejo posegati po podatkih ukazov po meri.\n\nSpremenljivke serverja so hranjene na serverju, kjer je bila oznaka izvajana.\n\n#### **Avtorski** okvir\n\nAvtorske spremenljivke so lahko dostopane od katere koli druge oznake, ki deli istega avtorja. Najbolj ustrezne so za javne oznake. To pomeni, da je v bistvu sklop osebnih spremenljivk, ki jih lahko uporabljate za vse svoje oznake.\n\nAvtorske spremenljivke so shranjene pri uporabniku, ki je ustvaril oznako.\n\n#### **Deljeni** okvirji\n**POZOR**: Niso še implementirani.\n> Predpona: `&<Ime>&`\n\nDeljene spremenljivke so bolj zakomplicirane. Operirajo se na podlagi dinamičnih spremenljivk, ki so dodeljene množici specifičnih oznak. Name deljenih spremenljivk je, da več uporabnikov sodeluje pri različnih oznakah, vendar si delijo iste spremenljivke.\n\nUporaba v specifičnem primeru je sledeča:\n1. Več uporabnikov ustvari različne oznake\n2. Eden od uporabnikov ustvari množico oznak s specifičnim imenom (npr. `test`)\n3. Ta uporabnik potem doda vsako od teh narejenih oznak k množici\n4. Vsaka oznaka je potem zmožna dostopati spremenljivkam množice z uporabo imena množice kot predpono (npr. `&test&`)\n\nTorej v tem primeru bi bila deljena spremenljivka `jabolko` bila dostopana z polnim imenom `&test&jabolko`."
        },
        "arrays": {
            "title": "Vrste",
            "desc": "## Vrste\n\nVrste so zelo uporabna struktura podatkov. V osnovi je vrsta seznam predmetov. Uporabljeni so podobno podoznakam, z uporabo oglatih oklepajev `[]` namesto ukrivljenih `{}`.\n\nZelo veliko podoznak je namenjenih uporabljanju in manipuliranju teh vrst. Glejte `Vrste` razred za več informacij.\n\n## Sintaksa\n> `[predmet;predmet;predmet]`\n\n### Kazala\n\nVrste so urejene. Vsak element v vrsti ima dodeljen **indeks**, ki je v bistvu pozicija elementa znotraj vrste.\n\nNajbolj pomembno o vrstah je vedeti, da so **0-indeksirane**. To pomeni, da se indeksi začnejo z 0 namesto z 1. Poglejmo primer na tej vrsti:\n```\nIndeks: 0 1 2 3 4\n-------------------\nVrednosti:  [1;2;3;4;5]\n```\n\nPrvi element, `1`, ima indeks `0`. Prav tako ima četrti element, `4`, dodeljen indeks `3`. Na začetku lahko zgleda zapleteno, vendar postane zelo enostavno, ko se na to navadite."
        }
    },
    "subtags": {
        "components": {
            "argument": "Argumenti:",
            "named": "Podpira navedene argumente",
            "unnamed": "**Ne** podpira navedenih argumentov",
            "array": "Pomožne vrste",
            "staff": "Avtor mora biti del osebja",
            "noimplicit": "Ne podpira posrednega kategoriziranja"
        },
        "referdocs": "Prosimo obrnite se na [documentation](/bbtag) za več navodil o uporabi."
    },
    "commands": {
        "title": "Ukazi",
        "desc": "",
        "components": {
            "usage": "Uporaba:",
            "flags": "Zastave:",
            "aliases": "Psevdonimi:",
            "subcommands": "Podukazi:"
        }
    },
    "dashboard": {
        "userheader": "Uporabniške nastavitve",
        "guildheader": "Nastavitve združbe",
        "notauthed": "### Žal nimate dostopa do te strani\n\nProsimo, da se prijavite, če želite uporabljati nadzorno ploščo.",
        "user": {
            "dmerrors": "Napake direktnih sporočil"
        }
    }
}