{
    "language": "İngilizce",
    "header": {
        "login": "Giriş Yap",
        "logout": "Çıkış Yap",
        "commands": "Komutlar",
        "bbtag": "BBTag",
        "subtags": "Biçiminde"
    },
    "generic": {
        "loading": "Yükleniyor",
        "collapse": "Tümünü Daralt",
        "expand": "Tüm kategorileri aç",
        "search": "Filtre...",
        "noresults": "Ah ah! Sonuç bulunamadı.",
        "resultsfound": "Eşleşen sonuçlar:"
    },
    "index": {
        "desc": "blargbot kalite komutları ve chatlogs ve derinlemesine özel komut sistemi gibi hizmetler sunmak için adanmış çok amaçlı bir anlaşmazlık bot olduğunu.",
        "commands": {
            "title": "Komutlar",
            "desc": "blargbot çok sayıda komutları, hepsi de belgelenmiş ve size kolaylık sağlamak için kategorize bulunuyor."
        },
        "bbtag": {
            "title": "BBTag",
            "desc": "blargbot BBTag, gelişmiş özel komutlar oluşturmak için kullanabileceğiniz denilen bir sofistike etiket sistemi kullanır."
        },
        "customization": {
            "title": "Kişiselleştirme",
            "desc": "Biz kapsamlı özelleştirme blargbot sahiptir, bu nedenle her lonca aynı şey anlıyorum. Tam olarak hangi rollerin hangi komutları, özel önekleri belirtin ve hatta değişmek göstermek dil kullanıp kullanamayacağınızı denetleyebilir!"
        },
        "moderation": {
            "title": "Moderasyon",
            "desc": "Sohbet orta mi ihtiyacınız var? blargbot kısma, daha fazla bilgi için chatlogging veya otomatik sansür gibi şeyler gelişmiş ve temel faaliyetlerden yasaklanması gibi birçok ılımlılık yarar ile donatılmıştır."
        },
        "opensource": {
            "title": "Açık Kaynak",
            "desc": "Paylaşım bakmakta olduğunu! blargbot altında belgili tanımlık GNU AGPLv3 ruhsat tamamen açık kaynak. Bir göz atın ve nasıl her şey çalışır öğrenmek çekinmeyin. Kendi projesinde kodumu birini kullanıyorsanız, bana kredi için gereklidir. Daha fazla ayrıntı için lisansa bakın."
        },
        "suggestions": {
            "title": "Önerilere açık",
            "desc": "Bot için bir öneriniz var mı? Bunu duyduğuna memnun olurdu! Bir hata mi buldunuz? Bu çok isteriz! Bana 'Öner' komutunu kullanarak benim lonca katılarak ya da bir bilet göndererek bir şey önerebilirsiniz."
        }
    },
    "bbtag": {
        "main": "# BBTag\n> BBCode ile karıştırılmamalıdır!\n\nBBTag, gelişmiş özel komutlar oluşturmak için güçlü bir çerçeve oluşturmak üzere tasarlanmış şablon tabanlı bir programlama dilidir.\n\n### Terminoloji\n\n- Bir \"etiket\", ister genel bir etiket olsun ister özel bir komut olsun, BBTag kodunun bir bloğunu ifade eder.\n- Bir \"alt etiket\", bir BBTag bileşenini belirtir. Gelişmiş `etiketler 'birçok' alt torbadan 'oluşur.\n- Bir \"sınıf\", bir \"alt etiket\" grubunu belirtir.",
        "subtags": {
            "title": "Biçiminde",
            "desc": "## SubTags\n\nAlt etiketler BBTag'in temel yapı taşıdır. Dinamik işlevler yerine getirirler; ister bir kullanıcının ismini alsın ister matematik yapıyor olsunlar. Şimdi bir alt etikete bir göz atalım:\n```\n{math.randint;1;10}\n```\nÇalıştırıldığında, böyle bir şey döndürebilir:\n```\n6\n```\nGördüğünüz gibi, `math.randint` alt-etiketi, verilen aralık arasında rastgele bir tam sayı döndürür.\n\n### Bir SubTag Anatomisi\n\nBir alt etiket çeşitli bileşenlerden oluşur. Bir sözdizimi diyagramı şuna benzer:\n```\n{[class.]name[![var]]([;args]...|=<namedArgs>...}\n```\nVay canına, tamam. Bu biraz kafa karıştırıcı, ama bana yük ver!\n\n#### Classes\n\n> `[class.]name`\n\nAlt etiketler ** sınıflar ** olarak adlandırılan gruplara ayrılır. Her sınıfın belirli bir amaç türü belirlenmiştir. Örneğin, `math` sınıfı sayıları ele alan alt etiketler içerir. Aynı şekilde `user` sınıfı, kullanıcılar hakkında bilgi veren alt etiketler içerir. Sınıflar bir organizasyon sistemi sağlar.\n\nBir alt etiket kullanırken tercih edilen kullanım `{class.name}` olacaktır. Bu okunabilirliği artırır. Bununla birlikte, sınıfı açıkça belirtmek genellikle isteğe bağlıdır. BBTag `{math.randint}` ve `{randint}` in aynı alt-etiket olduğunu bilir. Buna ** örtük sınıflandırma ** adı verilir. Bunun istisnası, `genel` sınıfın alt etiketleri olup, açık sınıf olmadan * kullanılmalıdır.\n\nBununla birlikte, örtülü sınıflandırmaya dikkat etmeniz gerekir! Bazen, sınıfların aynı adı taşıyan alt etiketleri olabilir. Örneğin, `{user.id}` ve `{channel.id}` ikisi de 'id` adında alt etiketler içerir. Birden çok sınıfta bulunan bir alt etiketle örtük sınıflamayı kullanmaya çalışırsanız, bir hata döndürür!\n\n#### Piping\n\n> `[![var]]`\n\nBorulama, alt etiketin çıktısını bir değişkene veya boşluğa yönlendirmenizi sağlayan bir özelliktir. Bu, kodunuzu temizlemeye yardımcı olabilir.\n\nÖrneğin, herhangi bir nedenle bir alt etiketin bir şey çıkmasını istemiyorsanız, sessizleştirmek için alt etiket isminden sonra bir `!` Ekleyebilirsiniz. Aşağıdaki satırlar eşdeğerdir:\n```\n{void;{math.randint;1;10}}\n{math.randint!;1;10}\n```\nAlt etiketin çıktısını bir değişkene depolamak isterseniz, alt etiket adıdan sonra `! VariableName` ekleyebilirsiniz. Aşağıdaki satırlar eşdeğerdir:\n```\n{set;randomInteger;{math.randint;1;10}}\n{math.randint!randomInteger;1;10}\n```\nPiping çıktısı, tam sözdizimini kullanmaktan biraz daha hızlıdır.\n\n#### Arguments\n\n> `[;args]...`\n\nParametreleri alt etiketler arasına aktarabilirsiniz. Bunlar noktalı virgülle '; `ayrılır. Bağımsız değişkenler alt etiketten farklıdır ve bunlar hakkındaki belgeler alt etiket sayfasında bulunabilir.\n\n##### Named Arguments\n\n> `=<namedArgs>...`\n\nNormalde, verilen argümanlar sırası çok önemlidir. Bununla birlikte, bunun yerine adlandırılmış eşdeğerlerini kullanabilirsiniz. Bu noktalı virgül yerine `=` işaretini kullanarak ve ardından anahtar-değer etiketlerini `{* key; value}` biçiminde belirterek yapılır.\n\nÖrneğin, `{math.randint}` kullanımı `{math.randint; min; max}` dir. Argümanların isimleri sırasıyla `min` ve` max` dir. Aşağıdaki kullanımlar eşdeğerdir:\n```\n{math.randint;1;10}\n{math.randint=\n    {*min;1}\n    {*max;10}\n}\n```\nAynı alt etikette hem adlandırılmış bağımsız değişkenleri hem de sıralı bağımsız değişkenleri kullanamazsınız."
        },
        "variables": {
            "title": "Değişkenler",
            "desc": "## Değişkenler\n\nBBTag, her biri farklı kapsamda olan birkaç farklı değişken türüne sahiptir. Bu değişkenler sayısız işlemler ve işlevler için kullanılabilir.\n\n### İsimler\n\nDeğişken bir ad iki bölümden oluşur: bir önek ve bir ad. İşte bir sözdizimi diyagramı:\n\n> [önek] adı\n\nBasit, değil mi?\n\n### Kapsamlar\n\nBir ** kapsam **, bir değişkene nereden erişebileceğiniz ve bunlar için ne kadar süre geçeceğinizi belirtir. Hangi kapsamın kullanılacağını bilmek, etiketinizi oluşturmada büyük ölçüde yardımcı olabilir!\n\nKaplamalara bakmanın bir başka yolu, nerede depolandığı * konumudur *. Örneğin yerel değişkenler etikete kaydedilirken, yazar değişkenleri etiketi oluşturan kullanıcıya kaydedilir.\n\nEn küçükten en büyüğe sırayla tüm farklı kapsamları inceleyelim.\n\n#### ** Geçici ** Kapsam\n> Düzeltilmemiş\n\nGeçici değişkenler en küçük ve en çok kullanılan değişkenlerdir, çünkü en küçük kapsamı vardır. Bu değişkenler * hiçbir zaman veritabanında saklanmaz * ve etiket yürütülmeye başlandıktan sonra durur. Bu nedenle, en hızlı kullanırlar.\n\nKullanımlar arasında kalıcı olması gerekmeyen şeyler için geçici değişkenleri kullanın.\n\n#### ** Yerel ** Kapsam\n> Önek: `~`\n\nYerel değişkenlere yalnızca onları oluşturan etiketle erişilebilir. Kullanımlar arasında ısrar etmeleri dışında, geçici değişkenlerle neredeyse aynı performans gösterirler.\n\nYerel değişkenler doğrudan etikete kaydedilir.\n\n#### ** Guild ** Kapsam\n> Önek: `_`\n\nGuild değişkenlerine yalnızca oluşturuldukları guild'ten erişilebilir. Bir lonca üzerindeki herhangi bir özel komut, yazar ne olursa olsun aynı değişken havuzunu paylaşır, özel komutlar için en uygundurlar.\n\nGenel etiketlerin ve özel komutların * aynı lonca kapsamını paylaşmadığını, bu nedenle rasgele etiketler özel komut verilerini kurcalayamadığına dikkat edilmelidir.\n\nGuild değişkenleri, guild'e etiketin üzerinde saklanır.\n\n#### ** Yazar ** Kapsam\n\nYazar değişkenlerine yalnızca aynı yazarları paylaşan başka herhangi bir etiketten erişilebilir. Herkese açık etiketler için en uygundurlar. Bu aslında, tüm etiketleriniz için kullanabileceğiniz kişisel bir değişken havuzudur.\n\nYazar değişkenleri, etiketi oluşturan kullanıcıya depolanır.\n\n#### ** Paylaşılan ** Kapsam\n** DİKKAT **: Henüz uygulanmadı.\n> Önek: `& <isim> &`\n\nPaylaşılan değişkenler daha karmaşıktır. Belirli etiket kümelerine atanan dinamik değişken havuzlarına dayanarak çalışırlar. Paylaşılan değişkenlerin amaçlanan amacı, aynı değişkenleri paylaşırken birden çok kullanıcının farklı etiketler üzerinde işbirliği yapmasıdır.\n\nÖzel kullanım durumu şöyledir:\n1. Birden çok kullanıcı farklı etiketler oluşturur\n2. Kullanıcılardan biri belirli bir ada sahip bir etiket kümesi oluşturur (örn. `Test`)\n3. Daha sonra bu kullanıcı oluşturulan tüm etiketleri kümeye ekler\n4. Daha sonra her etiket kümenin adını önek olarak kullanarak kümenin değişken havuzuna erişebilir (ör. `& Test &`)\n\nBu örnekte, paylaşılan değişken 'elma' '& test & elma' tam adıyla erişilebilirdi."
        },
        "arrays": {
            "title": "Diziler",
            "desc": "## Diziler\n\nDiziler çok kullanışlı bir veri yapısıdır. Özünde, bir dizi öğelerin bir listesi. Alt etiketler için benzer şekilde kullanılırlar; köşeli parantezler yerine `[]` köşeli ayraçlar kullanılır.\n\nDizileri kullanmak ve değiştirmek için ayrılmış çeşitli alt etiketler vardır. Daha fazla bilgi için `Dizi 'sınıfına bakınız.\n\n### Sözdizimi\n> `[item; item; item]`\n\n### Dizinler\n\nDiziler emredildi. Bir dizideki her bir öğeye temelde dizideki öğenin konumu olan bir ** dizin ** atanır.\n\nDiziler hakkında bilmeniz gereken en önemli şey, ** 0'a endeksli ** olduklarıdır. Bu, dizinler 1 yerine 0'da başlar demektir. Bu örnek dizisine bir göz atalım:\n`\n  Dizin: 0 1 2 3 4\n-------------------\nDeğerler: [1; 2; 3; 4; 5]\n`\nİlk elemanın '1', '0' dizinine sahiptir. Benzer şekilde, dördüncü öğe '4', '3' dizinine sahiptir. Bu ilk bakışta zor görünebilir, ancak buna alıştığınızda basit olur."
        }
    },
    "subtags": {
        "components": {
            "argument": "Bağımsız değişkenler:",
            "named": "Adlandırılmış bağımsız değişkenleri destekler",
            "unnamed": "Yok ** değil ** destek adlı bağımsız değişkenler",
            "array": "Dizileri destekler",
            "staff": "Buna yazmak için staff olman gerekiyor",
            "noimplicit": "Örtülü sınıflandırmaya desteklemiyor"
        },
        "referdocs": "Daha fazla kullanım yönergeleri için [documentation](/bbtag) başvurun."
    },
    "commands": {
        "title": "Komutlar",
        "desc": "blargbot çok sayıda komutla donatılmıştır. Varsayılan olarak, blargbot öneklere \"b!\", \"Blargbot\" ve mukabele cevap verir. Hem kendiniz hem de guild'leriniz için ek önekler ekleyebilirsiniz.\n\nBazı komutlar yalnızca personel olarak tanımladığınız üyeler tarafından kullanılabilir. Ayrıca, her komutun kullanım kısıtlamalarını ayrı ayrı özelleştirebilirsiniz.\n\nBazı komutların, resimlerin yüklenmesi gibi özel izin gereksinimleri vardır. Bir komut kullanmaya çalışırken bot'un uygun izinlere sahip olduğundan emin olun.\n\n## Arguments \n- `<>` - Gerekli bir argümanı belirtir\n- `[]` - isteğe bağlı bir argümanı belirtir\n- `...` - tekrarlanan bir argümanı belirtir\n\n### Flags\n\nBazı komutlar, komut satırı benzeri bayrak parametrelerini alabilirler. Tüm bayraklar bayrak kodlarına (\"-\" önekli) ve kelimelere (- - öneki) ayrılmıştır. Bayraklar herhangi bir sırada verilebilir, ancak normal argümanlardan sonra olmalıdır.\n\nÖrneğin, eğer bir komut bir kullanıcı girişi alırsa, `-u` veya` --user` kullanabilirsiniz.\n```\nb!command --user @user#1234\nb!command -u @user#1234\n```\nAyrıca bayrak kodlarını zincirleyebilirsiniz. Örneğin, `-flag test`,` -f`, `-l`,` -a` bayraklarını aktive eder ve içeriği `-g` olarak verir.",
        "components": {
            "usage": "Kullanım Şekli:",
            "flags": "İşaretler:",
            "aliases": "Diğer Adlar:",
            "subcommands": "Alt komutlar:"
        }
    }
}